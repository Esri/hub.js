import * as hubCommon from "../src";

/**
 * Skipping this test b/c it passes 100% of the time when running locally via `npm run test:node`
 * but fails 100% of the time running `npm run test:chrome`. Specifically, when run in chrome, this
 * test suggests some exported members are not importable.
 *
 * The missing artifacts in chrome are from the newsletter modules
 */

describe("index", () => {
  // exports that are consistent between both chrome and node
  const COMMON_EXPORTS = [
    "OperationStack",
    "OperationError",
    "HubError",
    "breakAssociation",
    "ASSOCIATION_REFERENCE_LIMIT",
    "getAssociatedEntitiesQuery",
    "getAssociationStats",
    "getAvailableToRequestEntitiesQuery",
    "getPendingEntitiesQuery",
    "getRequestingEntitiesQuery",
    "getReferencedEntityIds",
    "getWellKnownAssociationsCatalog",
    "getAvailableToRequestAssociationCatalogs",
    "setEntityAssociationGroup",
    "requestAssociation",
    "acceptAssociation",
    "canEditEvent",
    "canEditItem",
    "REQUIRED_PRIVS",
    "canEditSiteContent",
    "canEditSite",
    "hasBasePriv",
    "getHubApiUrl",
    "ENTERPRISE_SITES_PATH",
    "ENTERPRISE_HOME_SUBDOMAIN",
    "ArcGISContext",
    "ArcGISContextManager",
    "HUB_SERVICE_STATUS",
    "ENTERPRISE_SITES_SERVICE_STATUS",
    "ALPHA_ORGS",
    "categories",
    "isDownloadable",
    "UpdateFrequency",
    "getContentTypeIcon",
    "getPortalUrls",
    "getProxyUrl",
    "getLayerIdFromUrl",
    "isFeatureService",
    "isSiteType",
    "normalizeItemType",
    "getItemLayerId",
    "getItemHubId",
    "parseItemCategories",
    "getItemLayer",
    "isLayerView",
    "composeContent",
    "getFamily",
    "getFamilyTypes",
    "getCategory",
    "getTypes",
    "getTypeCategories",
    "getContentIdentifier",
    "itemToContent",
    "datasetToContent",
    "datasetToItem",
    "setContentType",
    "getContentTypeLabel",
    "getServiceStatus",
    "createContent",
    "updateContent",
    "deleteContent",
    "editorToContent",
    "fetchContent",
    "fetchHubContent",
    "convertItemToContent",
    "composeHubContent",
    "modelToHubEditableContent",
    "HubContent",
    "enrichContentSearchResult",
    "enrichImageSearchResult",
    "parseDatasetId",
    "isSlug",
    "addContextToSlug",
    "removeContextFromSlug",
    "JobRecordType",
    "JobRecordStatus",
    "isHostedFeatureServiceMainItem",
    "isHostedFeatureServiceMainEntity",
    "isAGOFeatureServiceUrl",
    "isSecureProxyServiceUrl",
    "ServiceCapabilities",
    "hasServiceCapability",
    "toggleServiceCapability",
    "fetchItemJobRecords",
    "HUB_ITEM_ENTITY_TYPES",
    "HUB_ENTITY_TYPES",
    "PublisherSource",
    "FeatureLayerStyle",
    "TIMELINE_STAGE_STATUSES",
    "isHubService",
    "ExpressionRelationships",
    "MetricVisibility",
    "MAX_ENTITY_METRICS_ALLOWED",
    "MAX_FEATURED_METRICS_ALLOWED",
    "EntityResourceMap",
    "EmbedKind",
    "validEntityEditorTypes",
    "validStatCardEditorTypes",
    "validFollowCardEditorTypes",
    "validEventGalleryCardEditorTypes",
    "validEmbedCardEditorTypes",
    "validDiscussionSettingsEditorTypes",
    "validCardEditorTypes",
    "validEditorTypes",
    "UiSchemaRuleEffects",
    "UiSchemaElementTypes",
    "UiSchemaSectionTypes",
    "UiSchemaMessageTypes",
    "getEditorConfig",
    "ENTITY_NAME_SCHEMA",
    "SITE_ENTITY_NAME_SCHEMA",
    "ENTERPRISE_SITE_ENTITY_NAME_SCHEMA",
    "ENTITY_SUMMARY_SCHEMA",
    "ENTITY_ACCESS_SCHEMA",
    "ENTITY_TAGS_SCHEMA",
    "ENTITY_CATEGORIES_SCHEMA",
    "ENTITY_IS_DISCUSSABLE_SCHEMA",
    "DISCUSSION_SETTINGS_SCHEMA",
    "ENTITY_FEATURED_CONTENT_SCHEMA",
    "ENTITY_LOCATION_SCHEMA",
    "ENTITY_MAP_SCHEMA",
    "ENTITY_IMAGE_SCHEMA",
    "ENTITY_TIMELINE_SCHEMA",
    "ENTITY_LAYOUT_SETUP_SCHEMA",
    "PRIVACY_CONFIG_SCHEMA",
    "SLUG_SCHEMA",
    "ENTITY_CATALOG_SETUP_SCHEMA",
    "GalleryDisplayConfigSchema",
    "PredicateSchema",
    "FilterSchema",
    "QuerySchema",
    "CollectionSchema",
    "CatalogSchema",
    "getTagItems",
    "fetchHubEntity",
    "getTypeFromEntity",
    "getTypesFromEntityType",
    "getRelativeWorkspaceUrl",
    "isValidEntityType",
    "processActionLinks",
    "processActionLink",
    "setEntityAccess",
    "shareEntityWithGroups",
    "unshareEntityWithGroups",
    "getEntityGroups",
    "getEntityThumbnailUrl",
    "getHubTypeFromItemType",
    "getEntityTypeFromHubEntityType",
    "WGS84_WKID",
    "serializeSpatialReference",
    "buildExistingExportsPortalQuery",
    "getSpatialRefTypeKeyword",
    "getExportItemTypeKeyword",
    "getExportLayerTypeKeyword",
    "PORTAL_EXPORT_TYPES",
    "ServiceDownloadFormat",
    "DownloadOperationStatus",
    "ArcgisHubDownloadError",
    "ArcgisHubDownloadFileTooLargeError",
    "fetchDownloadFile",
    "canUseCreateReplica",
    "canUseHubDownloadSystem",
    "canUseHubDownloadApi",
    "getHubDownloadApiFormats",
    "getDownloadConfiguration",
    "getDownloadFormats",
    "bBoxToExtent",
    "bboxToString",
    "createExtent",
    "extentToBBox",
    "GLOBAL_EXTENT",
    "orgExtent",
    "getOrgExtentAsBBox",
    "isBBox",
    "isValidExtent",
    "extentToPolygon",
    "getExtentCenter",
    "allCoordinatesPossiblyWGS84",
    "GeoJSONPolygonToBBox",
    "_unprotectAndRemoveGroup",
    "_consolidateResults",
    "_formatAutoAddResponse",
    "_processSecondaryEmail",
    "_processAutoAdd",
    "_processInvite",
    "_processPrimaryEmail",
    "_canEmailUser",
    "_getAutoAddUsers",
    "_getEmailUsers",
    "_getInviteUsers",
    "_isOrgAdmin",
    "addUsersToGroup",
    "enrichGroupSearchResult",
    "createHubGroup",
    "fetchHubGroup",
    "updateHubGroup",
    "deleteHubGroup",
    "HubGroup",
    "addGroupMembers",
    "getWellKnownGroup",
    "isOpenDataGroup",
    "autoAddUsers",
    "inviteUsers",
    "emailOrgUsers",
    "convertToWellKnownLocale",
    "fetchHubTranslation",
    "getCulture",
    "HUB_LOCALES",
    "HubInitiative",
    "createInitiative",
    "updateInitiative",
    "fetchInitiative",
    "deleteInitiative",
    "convertItemToInitiative",
    "enrichInitiativeSearchResult",
    "getPendingProjectsQuery",
    "initiativeToCardModel",
    "initiativeResultToCardModel",
    "HubInitiativeTemplate",
    "createInitiativeTemplate",
    "updateInitiativeTemplate",
    "deleteInitiativeTemplate",
    "fetchInitiativeTemplate",
    "convertItemToInitiativeTemplate",
    "enrichInitiativeTemplateSearchResult",
    "initiativeTemplateToCardModel",
    "initiativeTemplateResultToCardModel",
    "HubDiscussion",
    "createDiscussion",
    "updateDiscussion",
    "deleteDiscussion",
    "fetchDiscussion",
    "convertItemToDiscussion",
    "CANNOT_DISCUSS",
    "MENTION_ATTRIBUTE",
    "isDiscussable",
    "setDiscussableKeyword",
    "isPublicChannel",
    "isOrgChannel",
    "isPrivateChannel",
    "getChannelAccess",
    "getChannelOrgIds",
    "getChannelGroupIds",
    "getChannelUsersQuery",
    "channelToSearchResult",
    "getPostCSVFileName",
    "SortOrder",
    "PostReaction",
    "SharingAccess",
    "PostStatus",
    "DiscussionType",
    "DiscussionSource",
    "PostRelation",
    "ReactionRelation",
    "ChannelFilter",
    "CommonSort",
    "SearchPostsFormat",
    "Role",
    "PostSort",
    "PostType",
    "ChannelSort",
    "ChannelRelation",
    "AclCategory",
    "AclSubCategory",
    "EntitySettingType",
    "discussionsApiRequest",
    "discussionsApiRequestV2",
    "searchChannels",
    "searchChannelsV2",
    "createChannel",
    "fetchChannel",
    "updateChannel",
    "removeChannel",
    "fetchChannelNotifcationOptOut",
    "createChannelNotificationOptOut",
    "removeChannelNotificationOptOut",
    "removeChannelActivity",
    "createChannelV2",
    "fetchChannelV2",
    "updateChannelV2",
    "removeChannelV2",
    "fetchChannelNotifcationOptOutV2",
    "createChannelNotificationOptOutV2",
    "removeChannelNotificationOptOutV2",
    "removeChannelActivityV2",
    "createSetting",
    "fetchSetting",
    "updateSetting",
    "removeSetting",
    "createSettingV2",
    "fetchSettingV2",
    "updateSettingV2",
    "removeSettingV2",
    "getDefaultEntitySettings",
    "searchPosts",
    "exportPosts",
    "createPost",
    "createReply",
    "fetchPost",
    "removePost",
    "updatePost",
    "updatePostStatus",
    "searchPostsV2",
    "exportPostsV2",
    "createPostV2",
    "createReplyV2",
    "fetchPostV2",
    "removePostV2",
    "updatePostV2",
    "updatePostStatusV2",
    "createReaction",
    "removeReaction",
    "createReactionV2",
    "removeReactionV2",
    "canCreateChannel",
    "canDeleteChannel",
    "canEditChannel",
    "canModifyChannel",
    "canPostToChannel",
    "canReadChannel",
    "canReadFromChannel",
    "canCreateChannelV2",
    "canDeleteChannelV2",
    "canEditChannelV2",
    "canReadChannelV2",
    "deriveUserRoleV2",
    "canCreatePost",
    "canCreateReply",
    "canDeletePost",
    "canModifyPostStatus",
    "canEditPostStatus",
    "canModifyPost",
    "canEditPost",
    "parseDiscussionURI",
    "parseMentionedUsers",
    "canCreatePostV2",
    "canCreateReplyV2",
    "canDeletePostV2",
    "canEditPostStatusV2",
    "canEditPostV2",
    "cannotCreatePostGroupsBlockedV2",
    "canCreateReaction",
    "canCreateReactionV2",
    "reduceByGroupMembership",
    "isOrgAdmin",
    "isUserInOrg",
    "isOrgAdminInOrg",
    "userHasPrivilege",
    "userHasPrivileges",
    "HubChannel",
    "createHubChannel",
    "updateHubChannel",
    "deleteHubChannel",
    "fetchHubChannel",
    "getInputFeatureServiceModel",
    "getS123EditUrl",
    "getS123ShareUrl",
    "getSourceFeatureServiceModelFromFieldworker",
    "getStakeholderModel",
    "getSurveyModels",
    "isDraft",
    "isFieldworkerView",
    "createHubEvent",
    "updateHubEvent",
    "deleteHubEvent",
    "createHubEventRegistration",
    "deleteHubEventRegistration",
    "fetchEvent",
    "convertClientEventToHubEvent",
    "HubEvent",
    "HubEventAttendanceType",
    "HubEventCapacityType",
    "getEventGroups",
    "_unprotectAndRemoveItem",
    "applyPropertiesToItems",
    "deleteProp",
    "failSafeUpdate",
    "getModelFromOptions",
    "interpolate",
    "interpolateItemId",
    "replaceItemId",
    "shareItemToGroups",
    "unprotectModel",
    "unshareItemFromGroups",
    "doesItemExistWithTitle",
    "getUniqueItemTitle",
    "fetchAllPages",
    "STANDARD_LICENSES",
    "getStructuredLicense",
    "constructSlug",
    "setSlugKeyword",
    "getItemBySlug",
    "findItemsBySlug",
    "getUniqueSlug",
    "itemPropsNotInTemplates",
    "normalizeSolutionTemplateItem",
    "setItemThumbnail",
    "registerBrowserApp",
    "createItemFromFile",
    "createItemFromUrl",
    "createItemFromUrlOrFile",
    "uploadImageResource",
    "isServicesDirectoryDisabled",
    "getItemIdentifier",
    "deleteItemThumbnail",
    "getEntityFollowersGroupId",
    "isUserFollowing",
    "followEntity",
    "unfollowEntity",
    "fetchItem",
    "getModel",
    "getModelBySlug",
    "createModel",
    "updateModel",
    "upsertModelResources",
    "fetchModelFromItem",
    "fetchModelResources",
    "serializeModel",
    "subscribe",
    "createSubscription",
    "getSubscriptions",
    "getSubscription",
    "updateSubscription",
    "createUser",
    "getUser",
    "updateUser",
    "deleteUser",
    "NewsletterCadence",
    "DeliveryMethod",
    "SystemNotificationSpecNames",
    "SubscriptionAction",
    "notify",
    "SchedulerDeliveryMethod",
    "SchedulerSystemNotificationSpecNames",
    "SubscriptionEntityType",
    "SchedulerCadence",
    "SchedulerSubscriptionAction",
    "_deepMapValues",
    "_isString",
    "_isDate",
    "_isFunction",
    "_isObject",
    "_isRegExp",
    "_mapValues",
    "deepSet",
    "ensureProp",
    "getProp",
    "getProps",
    "getWithDefault",
    "removeEmptyProps",
    "deepStringReplace",
    "mergeObjects",
    "setProp",
    "deepFilter",
    "deepFindById",
    "deepFind",
    "resolveReferences",
    "pickProps",
    "deepEqual",
    "deepDeletePropByValue",
    "fetchOrg",
    "fetchOrgLimits",
    "fetchMaxNumUserGroupsLimit",
    "fetchOrganization",
    "portalToSearchResult",
    "portalToOrganization",
    "createPage",
    "updatePage",
    "fetchPage",
    "convertModelToPage",
    "convertItemToPage",
    "deletePage",
    "enrichPageSearchResult",
    "HubPage",
    "HubPermissionsPolicies",
    "getPermissionPolicy",
    "checkPermission",
    "addPermissionPolicy",
    "removePermissionPolicy",
    "COLLABORATION_TYPES",
    "isPermission",
    "HubProject",
    "createProject",
    "updateProject",
    "deleteProject",
    "fetchProject",
    "convertItemToProject",
    "enrichProjectSearchResult",
    "projectToCardModel",
    "projectResultToCardModel",
    "RemoteServerError",
    "hubApiRequest",
    "_addTokenToResourceUrl",
    "convertSolutionTemplateResourcesToAssets",
    "fetchAndUploadResource",
    "fetchAndUploadThumbnail",
    "fetchImageAsBlob",
    "getItemAssets",
    "getItemThumbnailUrl",
    "getOrgThumbnailUrl",
    "stringToBlob",
    "uploadResourcesFromUrl",
    "addSolutionResourceUrlToAssets",
    "objectToJsonBlob",
    "validateUrl",
    "upsertResource",
    "removeResource",
    "doesResourceExist",
    "isService",
    "createItem",
    "updateItem",
    "commitItemUpload",
    "Catalog",
    "Collection",
    "hubSearch",
    "serializeQueryForPortal",
    "CATALOG_SETUP_TYPES",
    "targetEntities",
    "CATALOG_SCHEMA_VERSION",
    "upgradeCatalogSchema",
    "valueToMatchOptions",
    "relativeDateToDateRange",
    "getGroupThumbnailUrl",
    "getUserThumbnailUrl",
    "migrateToCollectionKey",
    "getScopeGroupPredicate",
    "getGroupPredicate",
    "getResultSiteRelativeLink",
    "addDefaultItemSearchPredicates",
    "getKilobyteSizeOfQuery",
    "expandPortalQuery",
    "WELL_KNOWN_ITEM_CATALOGS",
    "WELL_KNOWN_GROUP_CATALOGS",
    "WELL_KNOWN_EVENT_CATALOGS",
    "dotifyString",
    "getWellKnownCatalogs",
    "getWellKnownCatalog",
    "getWellknownCollections",
    "getWellknownCollection",
    "searchAssociatedContent",
    "combineQueries",
    "serializeCatalogScope",
    "_ensureTelemetry",
    "_migrateFeedConfig",
    "_migrateEventListCardConfigs",
    "_migrateTelemetryConfig",
    "migrateBadBasemap",
    "_migrateLinkUnderlinesCapability",
    "migrateWebMappingApplicationSites",
    "_migrateToV2Catalog",
    "_checkStatusAndParseJson",
    "_getAuthHeader",
    "_getDomainServiceUrl",
    "_lookupPortal",
    "addDomain",
    "domainExists",
    "domainExistsPortal",
    "getDomainsForSite",
    "getUniqueDomainName",
    "getUniqueDomainNamePortal",
    "isDomainForLegacySite",
    "isDomainUsedElsewhere",
    "isValidDomain",
    "lookupDomain",
    "removeDomain",
    "removeDomainsBySiteId",
    "updateDomain",
    "_ensureSafeDomainLength",
    "ensureUniqueDomainName",
    "addSiteDomains",
    "removeDomainByHostname",
    "buildDraft",
    "fetchSiteModel",
    "getSiteById",
    "HubSite",
    "HUB_SITE_ITEM_TYPE",
    "ENTERPRISE_SITE_ITEM_TYPE",
    "createSite",
    "updateSite",
    "deleteSite",
    "fetchSite",
    "convertModelToSite",
    "convertItemToSite",
    "enrichSiteSearchResult",
    "SITE_SCHEMA_VERSION",
    "DEFAULT_THEME",
    "getOrgDefaultTheme",
    "upgradeSiteSchema",
    "getFeedConfiguration",
    "setFeedConfiguration",
    "reharvestSiteCatalog",
    "getFeedTemplate",
    "setFeedTemplate",
    "previewFeed",
    "getCatalogFromSiteModel",
    "defaultSiteCollectionKeys",
    "searchCategoriesToCollections",
    "HubTemplate",
    "templateToCardModel",
    "templateResultToCardModel",
    "fetchTemplate",
    "convertItemToTemplate",
    "enrichTemplateSearchResult",
    "createTemplate",
    "updateTemplate",
    "editorToTemplate",
    "deleteTemplate",
    "HubFamilies",
    "FileExtension",
    "ItemType",
    "addCreateItemTypes",
    "HubEntityStatus",
    "HubEntityHero",
    "isMapOrFeatureServerUrl",
    "getServiceTypeFromUrl",
    "buildUrl",
    "getHubLocaleAssetUrl",
    "getPortalApiUrl",
    "getPortalUrl",
    "HUB_CDN_URLMAP",
    "upgradeProtocol",
    "stripProtocol",
    "_getHttpAndHttpsUris",
    "_getLocation",
    "getHubApiUrlFromPortal",
    "getHubUrlFromPortal",
    "getItemHomeUrl",
    "getItemApiUrl",
    "getItemDataUrl",
    "convertUrlsToAnchorTags",
    "getHubApiFromPortalUrl",
    "getPortalBaseFromOrgUrl",
    "getContentHomeUrl",
    "getGroupHomeUrl",
    "getUserHomeUrl",
    "getCampaignUrl",
    "isSafeRedirectUrl",
    "cacheBustUrl",
    "getCdnAssetUrl",
    "isEnterprisePortalUrl",
    "convertUserToHubUser",
    "enrichUserSearchResult",
    "fetchHubUser",
    "userResultToCardModel",
    "cloneObject",
    "arrayToObject",
    "objectToArray",
    "findBy",
    "without",
    "compose",
    "createId",
    "maybeAdd",
    "maybePush",
    "camelize",
    "unique",
    "uniqueBy",
    "last",
    "filterBy",
    "extend",
    "addDays",
    "chunkArray",
    "isNil",
    "capitalize",
    "flattenArray",
    "asyncForEach",
    "batch",
    "unicodeToBase64",
    "base64ToUnicode",
    "ensureUniqueString",
    "createOperationPipeline",
    "failSafe",
    "generateRandomString",
    "getHubProduct",
    "getSubscriptionType",
    "includes",
    "isGuid",
    "isCuid",
    "mapBy",
    "slugify",
    "withoutByProp",
    "propifyString",
    "incrementString",
    "Logger",
    "isUpdateGroup",
    "runRevertableTask",
    "processRevertableTasks",
    "dasherize",
    "titleize",
    "memoize",
    "clearMemoizedCache",
    "getEnvironmentFromPortalUrl",
    "getEventThumbnail",
    "poll",
    "updateUserSiteSettings",
    "fetchUserSiteSettings",
    "updateUserHubSettings",
    "fetchUserHubSettings",
    "getObjectSize",
    "getDatePickerDate",
    "getTimePickerTime",
    "guessTimeZone",
    "isComboboxItemSelected",
    "wait",
    "isArrayEqual",
    "createVersion",
    "deleteVersion",
    "getVersion",
    "searchVersions",
    "updateVersion",
    "updateVersionMetadata",
    "applyVersion",
    "checkForStaleVersion",
    "getEntityMetrics",
    "resolveMetric",
    "aggregateMetrics",
    "editorToMetric",
    "buildWhereClause",
    "updateHubEntity",
    "getCardModelUrlFromResult",
    "getCardModelUrlFromEntity",
    "EntityEditor",
    "explainQueryResult",
    "getCatalogGroups",
    "getPredicateValues",
    "getUserGroupsByMembership",
    "getUserGroupsFromQuery",
    "negateGroupPredicates",
    "searchCatalogs",
    "searchEntityCatalogs",
    "addHistoryEntry",
    "removeHistoryEntry",
    "deepCatalogContains",
    "pathMap",
    "getPathForHubEntityType",
    "getHubEntityTypeFromPath",
    "parseContainmentPath",
    "catalogContains",
    "fetchCategoriesUiSchemaElement",
    "btoa",
    "atob",
    "compareAccess",
  ];

  const NODE_EXPORTS = [
    ...COMMON_EXPORTS,
    "ICreateEventMetadata",
    "ICreateTelemetryReportMetadata",
    "INotificationSpec",
    "ISubscribeMetadata",
    "ISubscription",
    "ISubscriptionMetadata",
    "IUser",
    "ISchedulerSubscriptionMetadata",
    "ISubscriptionCatalog",
    "ISchedulerUser",
    "ISchedulerNotificationSpec",
    "ISchedulerSubscription",
    "INotify",
  ];
  const exportedMembers = Object.keys(hubCommon);
  const expectedMembers =
    typeof window === "undefined" ? NODE_EXPORTS : COMMON_EXPORTS;

  it("should export the expected number of artifacts", () => {
    expect(exportedMembers.length).toEqual(expectedMembers.length);
    // console.log("====");
    // console.log("exportedMembers:", JSON.stringify(exportedMembers));
    // console.log("====");
  });

  it("should not add any unexpected exports", () => {
    const added = exportedMembers.filter(
      (exportedMember) => !expectedMembers.includes(exportedMember)
    );
    expect(added).toEqual([]);
  });

  it("should not unexpectedly remove any exports", () => {
    const removed = expectedMembers.filter(
      (expectedMember) => !exportedMembers.includes(expectedMember)
    );
    expect(removed).toEqual([]);
  });
});
